name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ "published" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check

  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        rust: [ stable ]
    runs-on: ${{ matrix.os }}
    env:
      exe_name: taskTracker
      exe_name_win: taskTracker.exe
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test -- --nocapture

      - name: Build release
        run: cargo build --release

      - name: save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exe-${{matrix.os}}
          path: "target/release/${{ contains(matrix.os, 'windows') && env.exe_name_win || env.exe_name }}"

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --codecov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: true

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  release:
    if: github.event_name == 'release'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: "*"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            exe-ubuntu-latest.zip
            exe-windows-latest.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          tag_name: ${{ github.ref }}
          body: |
            This is a release for ${{ github.ref }}.
            It contains the binary for the taskTracker application.
          draft: false
          prerelease: false